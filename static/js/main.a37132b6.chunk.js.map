{"version":3,"sources":["logo.svg","MessageBox.jsx","FormUser.jsx","App.js","reportWebVitals.js","index.js"],"names":["MessageBox","user","useState","listUserOnline","setListUserOnline","listMessage","setListMessage","message","setMessage","useEffect","socket","on","data","prev","Container","className","map","userEle","index","name","onClick","emit","messageEle","style","textAlign","socketId","type","value","onChange","e","target","styled","div","FormUser","onSetUser","onChangeName","htmlFor","io","App","setName","setUser","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a37132b6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { socket } from \"./App\";\r\n\r\nfunction MessageBox({\r\n    user = null\r\n}) {\r\n    const [listUserOnline, setListUserOnline] = useState([]);\r\n    const [listMessage, setListMessage] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n    useEffect(() => {\r\n        socket.on(\"thong_bao_user_online\", (data) => {\r\n            setListUserOnline(data);\r\n        });\r\n        socket.on(\"sever_gui_message\", (data) => {\r\n            setListMessage(prev => [...prev, data]);\r\n        });\r\n    }, []);\r\n    \r\n    const handleSendData = () => {\r\n        socket.emit(\"client_gui_message\", {\r\n            socketId: user.socketId,\r\n            name: user.name,\r\n            message: message\r\n        });\r\n        setMessage(\"\");\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <div className=\"userOnline\">\r\n                <h3>User Online </h3>\r\n                {listUserOnline.map((userEle, index) => {\r\n                    if (userEle.name === user.name) {\r\n                        return null;\r\n                    }\r\n                    const handleClickUser = () => {\r\n                        socket.emit(\"client_gui_partner_info\", userEle);\r\n                    };\r\n                    return (\r\n                        <div onClick={handleClickUser} key={index} className=\"userItem\">\r\n                            {userEle.name}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n            <div className=\"messageBox\">\r\n                <div className=\"listMessage\">\r\n                    {listMessage.map(messageEle => {\r\n                        return (\r\n                            <div style={{ textAlign: messageEle.socketId === user.socketId ? \"left\" : \"right\" }} className=\"messageItem\">\r\n                                {messageEle.name}: {messageEle.message}\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n                <div className=\"inputBox\">\r\n                    <div className=\"input\">\r\n                        <input type=\"text\" value={message} onChange={(e) => setMessage(e.target.value)} />\r\n                    </div>\r\n                    <div className=\"btnSend\">\r\n                        <button onClick={handleSendData}>Send</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default MessageBox;\r\n\r\nconst Container = styled.div`\r\n    width: 600px;\r\n    height: 400px;\r\n    margin: 20px auto;\r\n    border: 1px solid #000;\r\n    display: flex;\r\n\r\n    .userOnline {\r\n        flex: 1;\r\n        border-right: 1px solid #000;\r\n\r\n        h3 {\r\n            padding: 10px;\r\n            border-bottom: 1px solid #000;\r\n        }\r\n\r\n        .userItem {\r\n            padding: 10px;\r\n            border-bottom: 1px solid #000;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n\r\n    .messageBox {\r\n        flex: 2;\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        .listMessage {\r\n            flex: 1;\r\n        }\r\n\r\n        .inputBox {\r\n            display: flex;\r\n\r\n            .input {\r\n                flex: 1;\r\n                \r\n                input {\r\n                    width: 100%;\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nfunction FormUser({\r\n    name = \"\",\r\n    onSetUser = () => {},\r\n    onChangeName = () => {}\r\n}) {\r\n    return (\r\n        <Container>\r\n            <div className=\"formGroup\">\r\n                <label htmlFor=\"name\">Name: </label><br />\r\n                <input type=\"text\" value={name} onChange={onChangeName} />\r\n                <button onClick={onSetUser}>Submit</button>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst Container = styled.div``;\r\n\r\nexport default FormUser;","import logo from './logo.svg';\nimport { io } from \"socket.io-client\";\nimport MessageBox from './MessageBox';\nimport { useEffect, useState } from 'react';\nimport FormUser from './FormUser';\n\nexport const socket = io(\"https://sockett-io-test.herokuapp.com\");\n\nfunction App() {\n  const [name, setName] = useState(\"\");\n  const [user, setUser] = useState(null);\n  \n  const handleSetUser = () => {\n    socket.emit(\"register\", name);\n  };\n\n  useEffect(() => {\n    socket.on(\"registerFailure\", (data) => {\n      alert(data);\n    });\n    socket.on(\"registerSuccessful\", (data) => {\n      setUser({\n        name: data.name,\n        socketId: data.socketId\n      })\n    })\n  }, []);\n  const handleChangeName = (e) => {\n    // console.log(e);\n    setName(e.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      {user ? (\n        <MessageBox user={user}/>\n      ) : (\n        <FormUser\n          name={name}\n          onSetUser={handleSetUser}\n          onChangeName={handleChangeName}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}